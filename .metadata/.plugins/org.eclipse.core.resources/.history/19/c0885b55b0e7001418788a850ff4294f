package game;
import java.util.*;
import java.awt.*;
import java.io.*;

public class Character {

	Scanner console = new Scanner(System.in);
	
	public int[] position = new int[2];
	public Item equippedWeapon;
	public Item equippedArmor;
		
	public String characterName;
	public ArrayList<Item> inventory = new ArrayList<Item>();
	public ArrayList<Weapon> weapons = new ArrayList<Weapon>();
	public ArrayList<Armor> armor = new ArrayList<Armor>();
	public int[] stats = new int[4];
	public int money = 100;
	
	
	
	public Character(String name) {	
		characterName = name;
	}

	public Character() {
		this("");
	}
	
	public String toString() {
		return characterName;
	}
	
	public void showInventory() {
		for (int i = 0; i <inventory.size(); i++) {
			System.out.println(inventory.get(i).toString());
		}
	}

	public Move getMove() {
		Move move = new Move();
		System.out.println("Next move?");
		System.out.println("(M)ove\t (A)ttack\t (U)se item\t (I)nteract\t 				(T)alk: ");
		String input = console.next();
		switch (input) {
			case "M": move.action = Action.MOVE;
					move.dir = this.promptDirection();
			case "A": move.action = Action.ATTACK;
					move.dir = this.promptDirection();
					move.item = equippedWeapon;
			case "U": move.action = Action.USE;
					this.promptItem();
					move.dir = this.promptDirection();
			case "I": move.action = Action.INTERACT;
					move.dir = this.promptDirection();
			case "T": move.action = Action.TALK;
					move.dir = this.promptDirection();
			default: System.out.println("Invalid input. Too slow!");
					move.action = Action.STAY;
					move.dir = Direction.UP;
		}
		return move;
	}

	
	
	
	
	public Direction promptDirection() {
		System.out.println("Direction?");
		System.out.println("(U)p, (D)own, (L)eft, (R)ight: ");
		String input = console.next();
		switch (input) {
			case "U": return Direction.UP;
			case "D": return Direction.DOWN;
			case "L": return Direction.LEFT;
			case "R": return Direction.RIGHT;
			default: System.out.println("Invalid input. Too slow!");
					return Direction.STAY;
		}
	}
	
	
	
	
	
	
	public void promptItem() {

	}
		

}
